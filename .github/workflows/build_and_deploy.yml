name: Deploy Terraform and Packer AWS Automation

on:
  push:
    branches: [ main ]

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  ARGS: "-av"

jobs:
  packer_terraform:
    name: 'packer_terraform'
    runs-on: ubuntu-latest
    env:
      TF_WORKING_DIR: './scripts'
      TF_TERRAFORM_DIR: './terraform-deploy'
      TF_TERRAFORM_BUCKET_DIR: './terraform-bucket'

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js 16
        uses: actions/setup-node@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Install Packer
        uses: hashicorp-contrib/setup-packer@v2

      - name: Install dependencies python
        run: |
          python -m pip install --upgrade pip
          pip install awscli

      - name: Install Jq
        id: jq_install
        run: |
          mkdir -p ${HOME}/.local/bin
          wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 -O ${HOME}/.local/bin/jq
          chmod +x ${HOME}/.local/bin/jq
          echo "${HOME}/.local/bin" >> $GITHUB_PATH
        shell: bash    

      - name: Terraform bucket Apply
        id: apply_bucket
        run: |
          cd ../${{ env.TF_TERRAFORM_BUCKET_DIR }}
          terraform init -backend-config="access_key=${AWS_ACCESS_KEY_ID}" \
            -backend-config="secret_key=${AWS_SECRET_ACCESS_KEY}" \
            -input=false -no-color
          terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Init script packer-terraform.sh
        id: init_script
        run: |
          chmod +x packer-terraform.sh
          ./packer-terraform.sh all
        shell: bash

      - name: Terraform deploy Apply
        id: apply_deploy
        run: |
          cd ../${{ env.TF_TERRAFORM_DIR }}
          terraform init -backend-config="access_key=${AWS_ACCESS_KEY_ID}" \
            -backend-config="secret_key=${AWS_SECRET_ACCESS_KEY}" \
            -input=false -no-color
          terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
